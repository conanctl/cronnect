name: Build, Push & Deploy 

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  K8S_NAMESPACE: demo
  K8S_DEPLOYMENT: pingit
  K8S_CONTAINER: pingit

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ghcr.io/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
  deploy:
  needs: build-and-push
  runs-on: ubuntu-latest
  steps:
    - name: Deploy on VPS via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: ${{ secrets.VPS_SSH_PORT || 22 }}
        script: |
          set -euo pipefail
          IMG="ghcr.io/${{ toLower(github.repository) }}:${{ github.sha }}"
          kubectl -n demo set image deployment/pingit pingit="$IMG"
          kubectl -n demo patch service pingit -p='{"spec":{"ports":[{"port":80,"targetPort":8080}]}}' || true
          kubectl -n demo rollout status deployment/pingit --timeout=180s
          kubectl -n demo get pods -l app=pingit -o wide

